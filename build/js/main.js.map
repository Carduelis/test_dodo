{"version":3,"sources":["js/main.js"],"names":["data","problems","pizzerias","pills","arr","i","_","random","dodoRow","isHideTheRow","averageRatingDelta","rank","quality","Math","floor","service","cleanliness","ratingIntegerPart","this","averageRating","ratingDecimalPart","toFixed","rating","qualiServiClean","hasBeenRounded","delta","isMakeAGap","pizzeriaName","sample","sampleSize","url","window","dodoCollection","result","k","push","DodoApp","Marionette","Application","extend","region","initialize","options","console","log","onStart","getRegion","show","Root","View","$","start","template","regions","header","el","replaceElement","table","footer","onRender","Table","Header","Footer","onChildviewShuffle","className","tagName","ui","shuffleBtn","imageBtn","events","click @ui.imageBtn","triggers","click @ui.shuffleBtn","toggleImage","e","toggleClass","$btn","getUI","oldText","text","newText","attr","body","render","problem","click @ui.problem","mouseenter @ui.problem","mouseleave @ui.problem","onHighlight","problemId","currentTarget","dataset","$problems","$el","find","css","first","is","length","onHighlightOff","removeAttr","view","Body","Row","onBeforeRender","model","get","addClass","CollectionView","childView","collection","Backbone","Collection"],"mappings":"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","file":"js/main.js","sourcesContent":["(function(){\r\n\tvar data = {\r\n\t\tproblems :['вид&nbsp;напитка', 'внешний&nbsp;вид продукта', 'ожидание&nbsp;заказа', 'тесто', 'дружелюбность', 'ингредиенты','ингредиенты не&nbsp;по&nbsp;стандарту'],\r\n\t\tpizzerias : ['Анива','Апатиты','Апрелевка','Апшеронск','Аргаяш','Ардон','Арзамас','Армавир','Арсеньев','Артем','Верхний Тагил','Верхний Уфалей','Верхотурье','Верхоянск','Видное','Вилюйск','Витим','Владивосток','Владикавказ','Карпинск','Карталы','Касимов','Каспийск','Катав-Ивановск','Катайск','Качканар','Кашира','Плесецк','Подольск','Поронайск','Поярково','Приморско-Ахтарск','Приозерск','Прохладный','Ростов-на-Дону','Рубцовск','Руза','Рыбинск','Салават','Салехард','Сальск','Самара','Санкт-Петербург','Саранск','Сарапул','Саратов','Хабаровск','Ханты-Мансийск','Хасавюрт','Челябинск','Черемхово','Череповец','Черкесск','Чермоз'],\r\n\t\tget pills() {\r\n\t\t\tvar arr = [];\r\n\t\t\tfor (var i = 12; i > 0; i--) {\r\n\t\t\t\tarr[i] = _.random(40,100);\r\n\t\t\t}\r\n\t\t\treturn arr\r\n\t\t}\r\n\t}\r\n\tvar dodoRow = function(i, isHideTheRow) {\r\n\t\ti++;\r\n\t\tfunction averageRatingDelta() {\r\n\t\t\treturn _.random(1.1,1.9)\r\n\t\t}\r\n\t\treturn {\r\n\t\t\trank: i,\r\n\t\t\tquality: _.random(Math.floor(13+25/i),40),\r\n\t\t\tservice: _.random(Math.floor(15+25/i),40),\r\n\t\t\tcleanliness: _.random(Math.floor(10+9/i),20),\r\n\t\t\tget ratingIntegerPart() {\r\n\t\t\t\treturn Math.floor(this.averageRating);\r\n\t\t\t},\r\n\t\t\tget ratingDecimalPart() {\r\n\t\t\t\treturn (100*(-this.ratingIntegerPart+this.averageRating)).toFixed()\r\n\t\t\t},\r\n\t\t\tget rating() {\r\n\t\t\t\tvar qualiServiClean = this.quality+this.service+this.cleanliness\r\n\t\t\t\tvar hasBeenRounded = _.random(0,1);\r\n\t\t\t\treturn hasBeenRounded ? qualiServiClean+0.5 : qualiServiClean\r\n\t\t\t},\r\n\t\t\taverageRating: 100-i*averageRatingDelta(),\r\n\t\t\tdelta: _.random(-5,5),\r\n\t\t\tisHideTheRow: isHideTheRow,\r\n\t\t\tisMakeAGap: i == 20,\r\n\t\t\tpills: data.pills,\r\n\t\t\tpizzeriaName: _.sample(data.pizzerias),\r\n\t\t\tproblems: _.sampleSize(data.problems,_.random(1,3)),\r\n\t\t\turl: _.random(0.1,0.9) > 0.7 ? null : '//ya.ru?='+_.random(1,9),\r\n\t\t}\r\n\t};\r\n\twindow.dodoCollection = function(){\r\n\t\tvar result = [];\r\n\t\tvar k = 0;\r\n\t\tfor (var i in data.pizzerias) {\r\n\t\t\tvar isHideTheRow = i == 2 || i > 4 && i < 8 ||  i > 22 && i < 22;\r\n\t\t\tif (isHideTheRow) {\r\n\t\t\t\tk++;\r\n\t\t\t} \r\n\t\t\tresult.push(dodoRow(+i-k, isHideTheRow));\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n}())\r\n\r\nvar DodoApp = Marionette.Application.extend({\r\n\tregion: '#dodo-app',\r\n\tinitialize: function(options) {\r\n\t\tconsole.log('kek')\r\n\t},\r\n\tonStart: function() {\r\n\t\tconsole.log('kek')\r\n\t\tthis.getRegion().show(new Root.View());\r\n\t},\r\n});\r\n$(function(){\r\n\tnew DodoApp().start()\r\n});\r\nvar Root = Root || {};\r\n\r\nRoot.View = Marionette.View.extend({\r\n\ttemplate: '#t-root',\r\n\tregions: {\r\n\t\t'header' : {\r\n\t\t\tel: '.header',\r\n\t\t\treplaceElement: true,\r\n\t\t},\r\n\t\t'table' : {\r\n\t\t\tel: '.table',\r\n\t\t\treplaceElement: true,\r\n\t\t},\r\n\t\t'footer' : {\r\n\t\t\tel: '.footer',\r\n\t\t\treplaceElement: true,\r\n\t\t},\r\n\t},\r\n\tonRender: function() {\r\n\t\tthis.getRegion('table').show(new Table.View());\r\n\t\tthis.getRegion('header').show(new Root.Header());\r\n\t\tthis.getRegion('footer').show(new Root.Footer());\r\n\t},\r\n\tonChildviewShuffle : function() {\r\n\t\tthis.getRegion('table').show(new Table.View());\r\n\t}\r\n});\r\n\r\nRoot.Header = Marionette.View.extend({\r\n\ttemplate: '#t-header',\r\n\tclassName: 'wrapper',\r\n\ttagName: 'header',\r\n\tui: {\r\n\t\t'shuffleBtn' : '.shuffleBtn',\r\n\t\t'imageBtn' : '.toggleImage'\r\n\t},\r\n\tevents: {\r\n\t\t'click @ui.imageBtn' : 'toggleImage'\r\n\t},\r\n\ttriggers: {\r\n\t\t'click @ui.shuffleBtn' : 'shuffle',\r\n\t},\r\n\ttoggleImage: function(e){\r\n\t\t$('body').toggleClass('show-image');\r\n\t\t$btn = this.getUI('imageBtn');\r\n\t\tvar oldText = $btn.text();\r\n\t\tvar newText = $btn.attr('data-temp');\r\n\t\t$btn.text(newText);\r\n\t\t$btn.attr('data-temp',oldText)\r\n\t},\r\n});\r\nRoot.Footer = Marionette.View.extend({\r\n\ttemplate: '#t-footer',\r\n\ttagName: 'tagName',\r\n\tclassName: 'wrapper',\r\n});\r\n\r\nvar Table = Table || {};\r\n\r\nTable.View = Marionette.View.extend({\r\n\ttemplate: '#t-table',\r\n\tclassName: 'wrapper table',\r\n\tregions: {\r\n\t\t'header' : {\r\n\t\t\tel: 'header',\r\n\t\t\treplaceElement: true,\r\n\t\t},\r\n\t\t'body'\t: {\r\n\t\t\tel:\t'main',\r\n\t\t\treplaceElement: true\r\n\t\t}\r\n\t},\r\n\tinitialize: function() {\r\n\t\tthis.render();\r\n\t},\r\n\tui: {\r\n\t\t'problem' : '[data-problem-id]'\r\n\t},\r\n\tevents: {\r\n\t\t'click @ui.problem' : 'onClick',\r\n\t\t'mouseenter @ui.problem' : 'onHighlight',\r\n\t\t'mouseleave @ui.problem' : 'onHighlightOff',\r\n\t},\r\n\tonHighlight: function(e) {\r\n\t\tvar problemId = e.currentTarget.dataset.problemId;\r\n\t\tvar $problems = this.$el.find('span[data-problem-id=\"'+problemId+'\"]');\r\n\t\t\t$problems.css('border-color','hsla('+ 50*problemId+', 100%, 30%, 0.3)');\r\n\t\t\t$problems.first().is('[title]') || $problems.attr('title','Всего таких нарушений: ' + $problems.length)\r\n\t},\r\n\tonHighlightOff: function(e) {\r\n\t\tvar problemId = e.currentTarget.dataset.problemId;\r\n\t\tthis.$el.find('span[data-problem-id=\"'+problemId+'\"]').removeAttr('style');\r\n\t},\r\n\tonRender: function(view) {\r\n\t\tthis.getRegion('header').show(new Table.Header());\r\n\t\tthis.getRegion('body').show(new Table.Body());\r\n\t}\r\n});\r\n\r\nTable.Header = Marionette.View.extend({\r\n\ttagName: 'header',\r\n\tclassName: 'table-header',\r\n\ttemplate: '#t-table-header',\r\n});\r\n\r\nTable.Row = Marionette.View.extend({\r\n\tclassName: 'row',\r\n\ttemplate: '#t-table-row',\r\n\tonBeforeRender: function(view) {\r\n\t\tif (this.model.get('isMakeAGap')) {\r\n\t\t\tthis.$el.addClass('row-gap')\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\nTable.Body = Marionette.CollectionView.extend({\r\n\tchildView: Table.Row,\r\n\ttagName: 'main',\r\n\tclassName: 'table-body',\r\n\tinitialize: function(){\r\n\t\tthis.collection = new Backbone.Collection(dodoCollection());\r\n\t},\r\n});\r\n"],"sourceRoot":"/source/"}